

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Apr 08 11:44:15 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216                           
   217                           	psect	idataBANK0
   218  023E                     __pidataBANK0:
   219                           
   220                           ;initializer for _tabla
   221  023E  343F               	retlw	63
   222  023F  3406               	retlw	6
   223  0240  345B               	retlw	91
   224  0241  344F               	retlw	79
   225  0242  3466               	retlw	102
   226  0243  346D               	retlw	109
   227  0244  347D               	retlw	125
   228  0245  3407               	retlw	7
   229  0246  347F               	retlw	127
   230  0247  346F               	retlw	111
   231                           
   232                           	psect	nvBANK0
   233  0050                     __pnvBANK0:
   234  0050                     _display3:
   235  0050                     	ds	1
   236  0051                     _display2:
   237  0051                     	ds	1
   238  0052                     _display1:
   239  0052                     	ds	1
   240  0007                     _PORTC	set	7
   241  0008                     _PORTD	set	8
   242  0005                     _PORTA	set	5
   243  0006                     _PORTBbits	set	6
   244  0001                     _TMR0	set	1
   245  000B                     _INTCONbits	set	11
   246  008F                     _OSCCONbits	set	143
   247  0096                     _IOCBbits	set	150
   248  0095                     _WPUBbits	set	149
   249  0086                     _TRISBbits	set	134
   250  0088                     _TRISD	set	136
   251  0087                     _TRISC	set	135
   252  0085                     _TRISA	set	133
   253  0081                     _OPTION_REGbits	set	129
   254  0189                     _ANSELH	set	393
   255  0188                     _ANSEL	set	392
   256                           
   257                           	psect	cinit
   258  000F                     start_initialization:	
   259                           ; #config settings
   260                           
   261  000F                     __initialization:
   262                           
   263                           ; Initialize objects allocated to BANK0
   264  000F  1383               	bcf	3,7	;select IRP bank0
   265  0010  304B               	movlw	low (__pdataBANK0+10)
   266  0011  00FD               	movwf	btemp+-1
   267  0012  3002               	movlw	high __pidataBANK0
   268  0013  00FE               	movwf	btemp
   269  0014  303E               	movlw	low __pidataBANK0
   270  0015  00FF               	movwf	btemp+1
   271  0016  3041               	movlw	low __pdataBANK0
   272  0017  0084               	movwf	4
   273  0018  120A  118A  2222  120A  118A  	fcall	init_ram0
   274                           
   275                           ; Clear objects allocated to BANK0
   276  001D  01CB               	clrf	__pbssBANK0& (0+127)
   277  001E  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   278  001F  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   279  0020  01CE               	clrf	(__pbssBANK0+3)& (0+127)
   280  0021  01CF               	clrf	(__pbssBANK0+4)& (0+127)
   281                           
   282                           ; Clear objects allocated to COMMON
   283  0022  01F7               	clrf	__pbssCOMMON& (0+127)
   284  0023  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   285  0024  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   286  0025  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   287  0026                     end_of_initialization:	
   288                           ;End of C runtime variable initialization code
   289                           
   290  0026                     __end_of__initialization:
   291  0026  0183               	clrf	3
   292  0027  120A  118A  29B5   	ljmp	_main	;jump to C main() function
   293                           
   294                           	psect	bssCOMMON
   295  0077                     __pbssCOMMON:
   296  0077                     _digito1:
   297  0077                     	ds	1
   298  0078                     _bandera:
   299  0078                     	ds	1
   300  0079                     _cont2:
   301  0079                     	ds	1
   302  007A                     _cont1:
   303  007A                     	ds	1
   304                           
   305                           	psect	bssBANK0
   306  004B                     __pbssBANK0:
   307  004B                     _splitarray:
   308  004B                     	ds	3
   309  004E                     _digito3:
   310  004E                     	ds	1
   311  004F                     _digito2:
   312  004F                     	ds	1
   313                           
   314                           	psect	dataBANK0
   315  0041                     __pdataBANK0:
   316  0041                     _tabla:
   317  0041                     	ds	10
   318                           
   319                           	psect	inittext
   320  021E                     init_fetch0:	
   321                           ;	Called with low address in FSR and high address in W
   322                           
   323  021E  087E               	movf	btemp,w
   324  021F  008A               	movwf	10
   325  0220  087F               	movf	btemp+1,w
   326  0221  0082               	movwf	2
   327  0222                     init_ram0:	
   328                           ;Called with:
   329                           ;	high address of idata address in btemp 
   330                           ;	low address of idata address in btemp+1 
   331                           ;	low address of data in FSR
   332                           ;	high address + 1 of data in btemp-1
   333                           
   334  0222  120A  118A  221E  120A  118A  	fcall	init_fetch0
   335  0227  0080               	movwf	0
   336  0228  0A84               	incf	4,f
   337  0229  0804               	movf	4,w
   338  022A  067D               	xorwf	btemp+-1,w
   339  022B  1903               	btfsc	3,2
   340  022C  3400               	retlw	0
   341  022D  0AFF               	incf	btemp+1,f
   342  022E  1903               	btfsc	3,2
   343  022F  0AFE               	incf	btemp,f
   344  0230  2A22               	goto	init_ram0
   345                           
   346                           	psect	cstackCOMMON
   347  0070                     __pcstackCOMMON:
   348  0070                     ?_tmr0_setup:
   349  0070                     ?_isr:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_isr:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_setup:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_main:	
   359                           ; 1 bytes @ 0x0
   360                           
   361                           
   362                           ; 1 bytes @ 0x0
   363  0070                     	ds	3
   364  0073                     ??_tmr0_setup:
   365  0073                     ??_setup:	
   366                           ; 1 bytes @ 0x3
   367                           
   368  0073                     ?___awdiv:	
   369                           ; 1 bytes @ 0x3
   370                           
   371  0073                     ?___awmod:	
   372                           ; 2 bytes @ 0x3
   373                           
   374  0073                     ___awdiv@divisor:	
   375                           ; 2 bytes @ 0x3
   376                           
   377  0073                     ___awmod@divisor:	
   378                           ; 2 bytes @ 0x3
   379                           
   380                           
   381                           ; 2 bytes @ 0x3
   382  0073                     	ds	2
   383  0075                     ___awdiv@dividend:
   384  0075                     ___awmod@dividend:	
   385                           ; 2 bytes @ 0x5
   386                           
   387                           
   388                           ; 2 bytes @ 0x5
   389  0075                     	ds	2
   390  0077                     ??_function:
   391                           
   392                           	psect	cstackBANK0
   393  0020                     __pcstackBANK0:	
   394                           ; 1 bytes @ 0x7
   395                           
   396  0020                     ??___awdiv:
   397  0020                     ??___awmod:	
   398                           ; 1 bytes @ 0x0
   399                           
   400                           
   401                           ; 1 bytes @ 0x0
   402  0020                     	ds	1
   403  0021                     ___awdiv@counter:
   404  0021                     ___awmod@counter:	
   405                           ; 1 bytes @ 0x1
   406                           
   407                           
   408                           ; 1 bytes @ 0x1
   409  0021                     	ds	1
   410  0022                     ___awdiv@sign:
   411  0022                     ___awmod@sign:	
   412                           ; 1 bytes @ 0x2
   413                           
   414                           
   415                           ; 1 bytes @ 0x2
   416  0022                     	ds	1
   417  0023                     ___awdiv@quotient:
   418                           
   419                           ; 2 bytes @ 0x3
   420  0023                     	ds	2
   421  0025                     ?_function:
   422  0025                     function@num:	
   423                           ; 6 bytes @ 0x5
   424                           
   425                           
   426                           ; 2 bytes @ 0x5
   427  0025                     	ds	6
   428  002B                     function@splitarray:
   429                           
   430                           ; 6 bytes @ 0xB
   431  002B                     	ds	6
   432  0031                     function@digit:
   433                           
   434                           ; 2 bytes @ 0x11
   435  0031                     	ds	2
   436  0033                     function@D1:
   437                           
   438                           ; 6 bytes @ 0x13
   439  0033                     	ds	6
   440  0039                     ??_main:
   441                           
   442                           ; 1 bytes @ 0x19
   443  0039                     	ds	2
   444  003B                     main@result:
   445                           
   446                           ; 6 bytes @ 0x1B
   447  003B                     	ds	6
   448                           
   449                           	psect	maintext
   450  01B5                     __pmaintext:	
   451 ;;
   452 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   453 ;;
   454 ;; *************** function _main *****************
   455 ;; Defined at:
   456 ;;		line 157 in file "PostLab7.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;  result          6   27[BANK0 ] struct digitos
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : B00/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   470 ;;      Params:         0       0       0       0       0
   471 ;;      Locals:         0       6       0       0       0
   472 ;;      Temps:          0       2       0       0       0
   473 ;;      Totals:         0       8       0       0       0
   474 ;;Total ram usage:        8 bytes
   475 ;; Hardware stack levels required when called: 3
   476 ;; This function calls:
   477 ;;		_function
   478 ;;		_setup
   479 ;;		_tmr0_setup
   480 ;; This function is called by:
   481 ;;		Startup code after reset
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485  01B5                     _main:	
   486                           ;psect for function _main
   487                           
   488  01B5                     l1158:	
   489                           ;incstack = 0
   490                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   491                           
   492                           
   493                           ;PostLab7.c: 158:     setup();
   494  01B5  120A  118A  21FC  120A  118A  	fcall	_setup
   495                           
   496                           ;PostLab7.c: 159:     tmr0_setup();
   497  01BA  120A  118A  2231  120A  118A  	fcall	_tmr0_setup
   498  01BF                     l1160:
   499                           
   500                           ;PostLab7.c: 161:         struct digitos result = function(PORTA);
   501  01BF  1283               	bcf	3,5	;RP0=0, select bank0
   502  01C0  1303               	bcf	3,6	;RP1=0, select bank0
   503  01C1  0805               	movf	5,w	;volatile
   504  01C2  00B9               	movwf	??_main
   505  01C3  01BA               	clrf	??_main+1
   506  01C4  0839               	movf	??_main,w
   507  01C5  00A5               	movwf	function@num
   508  01C6  083A               	movf	??_main+1,w
   509  01C7  00A6               	movwf	function@num+1
   510  01C8  120A  118A  202A  120A  118A  	fcall	_function
   511  01CD  303B               	movlw	main@result& (0+255)
   512  01CE  0084               	movwf	4
   513  01CF  1283               	bcf	3,5	;RP0=0, select bank0
   514  01D0  1303               	bcf	3,6	;RP1=0, select bank0
   515  01D1  0825               	movf	?_function,w
   516  01D2  1383               	bcf	3,7	;select IRP bank0
   517  01D3  0080               	movwf	0
   518  01D4  0A84               	incf	4,f
   519  01D5  0826               	movf	?_function+1,w
   520  01D6  0080               	movwf	0
   521  01D7  0A84               	incf	4,f
   522  01D8  0827               	movf	?_function+2,w
   523  01D9  0080               	movwf	0
   524  01DA  0A84               	incf	4,f
   525  01DB  0828               	movf	?_function+3,w
   526  01DC  0080               	movwf	0
   527  01DD  0A84               	incf	4,f
   528  01DE  0829               	movf	?_function+4,w
   529  01DF  0080               	movwf	0
   530  01E0  0A84               	incf	4,f
   531  01E1  082A               	movf	?_function+5,w
   532  01E2  0080               	movwf	0
   533  01E3                     l1162:
   534                           
   535                           ;PostLab7.c: 162:         display3 = tabla[result.digito3];
   536  01E3  083F               	movf	main@result+4,w
   537  01E4  3E41               	addlw	(low (_tabla| 0))& (0+255)
   538  01E5  0084               	movwf	4
   539  01E6  0800               	movf	0,w
   540  01E7  00B9               	movwf	??_main
   541  01E8  0839               	movf	??_main,w
   542  01E9  00D0               	movwf	_display3
   543  01EA                     l1164:
   544                           
   545                           ;PostLab7.c: 163:         display2 = tabla[result.digito2];
   546  01EA  083D               	movf	main@result+2,w
   547  01EB  3E41               	addlw	(low (_tabla| 0))& (0+255)
   548  01EC  0084               	movwf	4
   549  01ED  0800               	movf	0,w
   550  01EE  00B9               	movwf	??_main
   551  01EF  0839               	movf	??_main,w
   552  01F0  00D1               	movwf	_display2
   553  01F1                     l1166:
   554                           
   555                           ;PostLab7.c: 164:         display1 = tabla[result.digito1];
   556  01F1  083B               	movf	main@result,w
   557  01F2  3E41               	addlw	(low (_tabla| 0))& (0+255)
   558  01F3  0084               	movwf	4
   559  01F4  0800               	movf	0,w
   560  01F5  00B9               	movwf	??_main
   561  01F6  0839               	movf	??_main,w
   562  01F7  00D2               	movwf	_display1
   563  01F8  29BF               	goto	l1160
   564  01F9  120A  118A  280C   	ljmp	start
   565  01FC                     __end_of_main:
   566                           
   567                           	psect	text1
   568  0231                     __ptext1:	
   569 ;; *************** function _tmr0_setup *****************
   570 ;; Defined at:
   571 ;;		line 52 in file "PostLab7.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		wreg
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   585 ;;      Params:         0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used: 1
   591 ;; Hardware stack levels required when called: 1
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599  0231                     _tmr0_setup:	
   600                           ;psect for function _tmr0_setup
   601                           
   602  0231                     l948:	
   603                           ;incstack = 0
   604                           ; Regs used in _tmr0_setup: [wreg]
   605                           
   606                           
   607                           ;PostLab7.c: 53:     OPTION_REGbits.T0CS = 0;
   608  0231  1683               	bsf	3,5	;RP0=1, select bank1
   609  0232  1303               	bcf	3,6	;RP1=0, select bank1
   610  0233  1281               	bcf	1,5	;volatile
   611                           
   612                           ;PostLab7.c: 54:     OPTION_REGbits.PSA = 0;
   613  0234  1181               	bcf	1,3	;volatile
   614                           
   615                           ;PostLab7.c: 55:     OPTION_REGbits.PS0 = 1;
   616  0235  1401               	bsf	1,0	;volatile
   617                           
   618                           ;PostLab7.c: 56:     OPTION_REGbits.PS1 = 1;
   619  0236  1481               	bsf	1,1	;volatile
   620                           
   621                           ;PostLab7.c: 57:     OPTION_REGbits.PS2 = 1;
   622  0237  1501               	bsf	1,2	;volatile
   623                           
   624                           ;PostLab7.c: 58:     INTCONbits.T0IF = 0;
   625  0238  110B               	bcf	11,2	;volatile
   626  0239                     l950:
   627                           
   628                           ;PostLab7.c: 59:     TMR0 = 217;
   629  0239  30D9               	movlw	217
   630  023A  1283               	bcf	3,5	;RP0=0, select bank0
   631  023B  1303               	bcf	3,6	;RP1=0, select bank0
   632  023C  0081               	movwf	1	;volatile
   633  023D                     l57:
   634  023D  0008               	return
   635  023E                     __end_of_tmr0_setup:
   636                           
   637                           	psect	text2
   638  01FC                     __ptext2:	
   639 ;; *************** function _setup *****************
   640 ;; Defined at:
   641 ;;		line 96 in file "PostLab7.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0
   658 ;;      Totals:         0       0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used: 1
   661 ;; Hardware stack levels required when called: 1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669  01FC                     _setup:	
   670                           ;psect for function _setup
   671                           
   672  01FC                     l954:	
   673                           ;incstack = 0
   674                           ; Regs used in _setup: [wreg+status,2+status,0]
   675                           
   676                           
   677                           ;PostLab7.c: 97:     ANSEL = 0;
   678  01FC  1683               	bsf	3,5	;RP0=1, select bank3
   679  01FD  1703               	bsf	3,6	;RP1=1, select bank3
   680  01FE  0188               	clrf	8	;volatile
   681                           
   682                           ;PostLab7.c: 98:     ANSELH = 0;
   683  01FF  0189               	clrf	9	;volatile
   684                           
   685                           ;PostLab7.c: 100:     TRISA = 0x00;
   686  0200  1683               	bsf	3,5	;RP0=1, select bank1
   687  0201  1303               	bcf	3,6	;RP1=0, select bank1
   688  0202  0185               	clrf	5	;volatile
   689                           
   690                           ;PostLab7.c: 101:     TRISC = 0x00;
   691  0203  0187               	clrf	7	;volatile
   692                           
   693                           ;PostLab7.c: 102:     TRISD = 0x00;
   694  0204  0188               	clrf	8	;volatile
   695                           
   696                           ;PostLab7.c: 103:     PORTA = 0x00;
   697  0205  1283               	bcf	3,5	;RP0=0, select bank0
   698  0206  1303               	bcf	3,6	;RP1=0, select bank0
   699  0207  0185               	clrf	5	;volatile
   700                           
   701                           ;PostLab7.c: 104:     PORTC = 0x00;
   702  0208  0187               	clrf	7	;volatile
   703                           
   704                           ;PostLab7.c: 105:     PORTD = 0x00;
   705  0209  0188               	clrf	8	;volatile
   706  020A                     l956:
   707                           
   708                           ;PostLab7.c: 107:     TRISBbits.TRISB0 = 1;
   709  020A  1683               	bsf	3,5	;RP0=1, select bank1
   710  020B  1303               	bcf	3,6	;RP1=0, select bank1
   711  020C  1406               	bsf	6,0	;volatile
   712  020D                     l958:
   713                           
   714                           ;PostLab7.c: 108:     TRISBbits.TRISB1 = 1;
   715  020D  1486               	bsf	6,1	;volatile
   716  020E                     l960:
   717                           
   718                           ;PostLab7.c: 110:     OPTION_REGbits.nRBPU = 0;
   719  020E  1381               	bcf	1,7	;volatile
   720  020F                     l962:
   721                           
   722                           ;PostLab7.c: 111:     WPUBbits.WPUB0 = 1;
   723  020F  1415               	bsf	21,0	;volatile
   724  0210                     l964:
   725                           
   726                           ;PostLab7.c: 112:     WPUBbits.WPUB1 = 1;
   727  0210  1495               	bsf	21,1	;volatile
   728  0211                     l966:
   729                           
   730                           ;PostLab7.c: 114:     INTCONbits.GIE = 1;
   731  0211  178B               	bsf	11,7	;volatile
   732  0212                     l968:
   733                           
   734                           ;PostLab7.c: 115:     INTCONbits.T0IE = 1;
   735  0212  168B               	bsf	11,5	;volatile
   736  0213                     l970:
   737                           
   738                           ;PostLab7.c: 116:     INTCONbits.RBIE = 0;
   739  0213  118B               	bcf	11,3	;volatile
   740  0214                     l972:
   741                           
   742                           ;PostLab7.c: 117:     IOCBbits.IOCB0 = 1;
   743  0214  1416               	bsf	22,0	;volatile
   744  0215                     l974:
   745                           
   746                           ;PostLab7.c: 118:     IOCBbits.IOCB1 = 1;
   747  0215  1496               	bsf	22,1	;volatile
   748  0216                     l976:
   749                           
   750                           ;PostLab7.c: 119:     INTCONbits.RBIF = 0;
   751  0216  100B               	bcf	11,0	;volatile
   752  0217                     l978:
   753                           
   754                           ;PostLab7.c: 120:     INTCONbits.T0IF = 0;
   755  0217  110B               	bcf	11,2	;volatile
   756  0218                     l980:
   757                           
   758                           ;PostLab7.c: 122:     OSCCONbits.IRCF = 0b0110;
   759  0218  080F               	movf	15,w	;volatile
   760  0219  398F               	andlw	-113
   761  021A  3860               	iorlw	96
   762  021B  008F               	movwf	15	;volatile
   763  021C                     l982:
   764                           
   765                           ;PostLab7.c: 123:     OSCCONbits.SCS = 1;
   766  021C  140F               	bsf	15,0	;volatile
   767  021D                     l75:
   768  021D  0008               	return
   769  021E                     __end_of_setup:
   770                           
   771                           	psect	text3
   772  002A                     __ptext3:	
   773 ;; *************** function _function *****************
   774 ;; Defined at:
   775 ;;		line 134 in file "PostLab7.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  num             2    5[BANK0 ] int 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  splitarray      6   11[BANK0 ] int [3]
   780 ;;  D1              6   19[BANK0 ] struct digitos
   781 ;;  digit           2   17[BANK0 ] int 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  6    5[BANK0 ] struct digitos
   784 ;; Registers used:
   785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       6       0       0       0
   792 ;;      Locals:         0      14       0       0       0
   793 ;;      Temps:          0       0       0       0       0
   794 ;;      Totals:         0      20       0       0       0
   795 ;;Total ram usage:       20 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; Hardware stack levels required when called: 2
   798 ;; This function calls:
   799 ;;		___awdiv
   800 ;;		___awmod
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806  002A                     _function:	
   807                           ;psect for function _function
   808                           
   809  002A                     l1136:	
   810                           ;incstack = 0
   811                           ; Regs used in _function: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   812                           
   813                           
   814                           ;PostLab7.c: 135:     int splitarray[3];;PostLab7.c: 136:     struct digitos D1;;PostLab
      +                          7.c: 138:     int digit = num%10;
   815  002A  300A               	movlw	10
   816  002B  00F3               	movwf	___awmod@divisor
   817  002C  3000               	movlw	0
   818  002D  00F4               	movwf	___awmod@divisor+1
   819  002E  1283               	bcf	3,5	;RP0=0, select bank0
   820  002F  1303               	bcf	3,6	;RP1=0, select bank0
   821  0030  0826               	movf	function@num+1,w
   822  0031  00F6               	movwf	___awmod@dividend+1
   823  0032  0825               	movf	function@num,w
   824  0033  00F5               	movwf	___awmod@dividend
   825  0034  120A  118A  210E  120A  118A  	fcall	___awmod
   826  0039  0874               	movf	?___awmod+1,w
   827  003A  1283               	bcf	3,5	;RP0=0, select bank0
   828  003B  1303               	bcf	3,6	;RP1=0, select bank0
   829  003C  00B2               	movwf	function@digit+1
   830  003D  0873               	movf	?___awmod,w
   831  003E  00B1               	movwf	function@digit
   832  003F                     l1138:
   833                           
   834                           ;PostLab7.c: 139:     splitarray[0] = digit;
   835  003F  0832               	movf	function@digit+1,w
   836  0040  00AC               	movwf	function@splitarray+1
   837  0041  0831               	movf	function@digit,w
   838  0042  00AB               	movwf	function@splitarray
   839  0043                     l1140:
   840                           
   841                           ;PostLab7.c: 141:     num = num/10;
   842  0043  300A               	movlw	10
   843  0044  00F3               	movwf	___awdiv@divisor
   844  0045  3000               	movlw	0
   845  0046  00F4               	movwf	___awdiv@divisor+1
   846  0047  0826               	movf	function@num+1,w
   847  0048  00F6               	movwf	___awdiv@dividend+1
   848  0049  0825               	movf	function@num,w
   849  004A  00F5               	movwf	___awdiv@dividend
   850  004B  120A  118A  20A5  120A  118A  	fcall	___awdiv
   851  0050  0874               	movf	?___awdiv+1,w
   852  0051  1283               	bcf	3,5	;RP0=0, select bank0
   853  0052  1303               	bcf	3,6	;RP1=0, select bank0
   854  0053  00A6               	movwf	function@num+1
   855  0054  0873               	movf	?___awdiv,w
   856  0055  00A5               	movwf	function@num
   857  0056                     l1142:
   858                           
   859                           ;PostLab7.c: 142:     digit = num%10;
   860  0056  300A               	movlw	10
   861  0057  00F3               	movwf	___awmod@divisor
   862  0058  3000               	movlw	0
   863  0059  00F4               	movwf	___awmod@divisor+1
   864  005A  0826               	movf	function@num+1,w
   865  005B  00F6               	movwf	___awmod@dividend+1
   866  005C  0825               	movf	function@num,w
   867  005D  00F5               	movwf	___awmod@dividend
   868  005E  120A  118A  210E  120A  118A  	fcall	___awmod
   869  0063  0874               	movf	?___awmod+1,w
   870  0064  1283               	bcf	3,5	;RP0=0, select bank0
   871  0065  1303               	bcf	3,6	;RP1=0, select bank0
   872  0066  00B2               	movwf	function@digit+1
   873  0067  0873               	movf	?___awmod,w
   874  0068  00B1               	movwf	function@digit
   875  0069                     l1144:
   876                           
   877                           ;PostLab7.c: 143:     splitarray[1] = digit;
   878  0069  0832               	movf	function@digit+1,w
   879  006A  00AE               	movwf	function@splitarray+3
   880  006B  0831               	movf	function@digit,w
   881  006C  00AD               	movwf	function@splitarray+2
   882                           
   883                           ;PostLab7.c: 145:     num = num/10;
   884  006D  300A               	movlw	10
   885  006E  00F3               	movwf	___awdiv@divisor
   886  006F  3000               	movlw	0
   887  0070  00F4               	movwf	___awdiv@divisor+1
   888  0071  0826               	movf	function@num+1,w
   889  0072  00F6               	movwf	___awdiv@dividend+1
   890  0073  0825               	movf	function@num,w
   891  0074  00F5               	movwf	___awdiv@dividend
   892  0075  120A  118A  20A5  120A  118A  	fcall	___awdiv
   893  007A  0874               	movf	?___awdiv+1,w
   894  007B  1283               	bcf	3,5	;RP0=0, select bank0
   895  007C  1303               	bcf	3,6	;RP1=0, select bank0
   896  007D  00A6               	movwf	function@num+1
   897  007E  0873               	movf	?___awdiv,w
   898  007F  00A5               	movwf	function@num
   899  0080                     l1146:
   900                           
   901                           ;PostLab7.c: 146:     splitarray[2] = num;
   902  0080  0826               	movf	function@num+1,w
   903  0081  00B0               	movwf	function@splitarray+5
   904  0082  0825               	movf	function@num,w
   905  0083  00AF               	movwf	function@splitarray+4
   906  0084                     l1148:
   907                           
   908                           ;PostLab7.c: 149:     D1.digito3 = splitarray[0];
   909  0084  082C               	movf	function@splitarray+1,w
   910  0085  00B8               	movwf	function@D1+5
   911  0086  082B               	movf	function@splitarray,w
   912  0087  00B7               	movwf	function@D1+4
   913  0088                     l1150:
   914                           
   915                           ;PostLab7.c: 150:     D1.digito2 = splitarray[1];
   916  0088  082E               	movf	function@splitarray+3,w
   917  0089  00B6               	movwf	function@D1+3
   918  008A  082D               	movf	function@splitarray+2,w
   919  008B  00B5               	movwf	function@D1+2
   920  008C                     l1152:
   921                           
   922                           ;PostLab7.c: 151:     D1.digito1 = splitarray[2];
   923  008C  0830               	movf	function@splitarray+5,w
   924  008D  00B4               	movwf	function@D1+1
   925  008E  082F               	movf	function@splitarray+4,w
   926  008F  00B3               	movwf	function@D1
   927  0090                     l1154:
   928                           
   929                           ;PostLab7.c: 154:     return D1;
   930  0090  3025               	movlw	?_function& (0+255)
   931  0091  0084               	movwf	4
   932  0092  0833               	movf	function@D1,w
   933  0093  1383               	bcf	3,7	;select IRP bank0
   934  0094  0080               	movwf	0
   935  0095  0A84               	incf	4,f
   936  0096  0834               	movf	function@D1+1,w
   937  0097  0080               	movwf	0
   938  0098  0A84               	incf	4,f
   939  0099  0835               	movf	function@D1+2,w
   940  009A  0080               	movwf	0
   941  009B  0A84               	incf	4,f
   942  009C  0836               	movf	function@D1+3,w
   943  009D  0080               	movwf	0
   944  009E  0A84               	incf	4,f
   945  009F  0837               	movf	function@D1+4,w
   946  00A0  0080               	movwf	0
   947  00A1  0A84               	incf	4,f
   948  00A2  0838               	movf	function@D1+5,w
   949  00A3  0080               	movwf	0
   950  00A4                     l78:
   951  00A4  0008               	return
   952  00A5                     __end_of_function:
   953                           
   954                           	psect	text4
   955  010E                     __ptext4:	
   956 ;; *************** function ___awmod *****************
   957 ;; Defined at:
   958 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  divisor         2    3[COMMON] int 
   961 ;;  dividend        2    5[COMMON] int 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  sign            1    2[BANK0 ] unsigned char 
   964 ;;  counter         1    1[BANK0 ] unsigned char 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  2    3[COMMON] int 
   967 ;; Registers used:
   968 ;;		wreg, status,2, status,0
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         4       0       0       0       0
   975 ;;      Locals:         0       2       0       0       0
   976 ;;      Temps:          0       1       0       0       0
   977 ;;      Totals:         4       3       0       0       0
   978 ;;Total ram usage:        7 bytes
   979 ;; Hardware stack levels used: 1
   980 ;; Hardware stack levels required when called: 1
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_function
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988  010E                     ___awmod:	
   989                           ;psect for function ___awmod
   990                           
   991  010E                     l1098:	
   992                           ;incstack = 0
   993                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   994                           
   995  010E  1283               	bcf	3,5	;RP0=0, select bank0
   996  010F  1303               	bcf	3,6	;RP1=0, select bank0
   997  0110  01A2               	clrf	___awmod@sign
   998  0111                     l1100:
   999  0111  1FF6               	btfss	___awmod@dividend+1,7
  1000  0112  2914               	goto	u631
  1001  0113  2915               	goto	u630
  1002  0114                     u631:
  1003  0114  291C               	goto	l1106
  1004  0115                     u630:
  1005  0115                     l1102:
  1006  0115  09F5               	comf	___awmod@dividend,f
  1007  0116  09F6               	comf	___awmod@dividend+1,f
  1008  0117  0AF5               	incf	___awmod@dividend,f
  1009  0118  1903               	skipnz
  1010  0119  0AF6               	incf	___awmod@dividend+1,f
  1011  011A                     l1104:
  1012  011A  01A2               	clrf	___awmod@sign
  1013  011B  0AA2               	incf	___awmod@sign,f
  1014  011C                     l1106:
  1015  011C  1FF4               	btfss	___awmod@divisor+1,7
  1016  011D  291F               	goto	u641
  1017  011E  2920               	goto	u640
  1018  011F                     u641:
  1019  011F  2925               	goto	l1110
  1020  0120                     u640:
  1021  0120                     l1108:
  1022  0120  09F3               	comf	___awmod@divisor,f
  1023  0121  09F4               	comf	___awmod@divisor+1,f
  1024  0122  0AF3               	incf	___awmod@divisor,f
  1025  0123  1903               	skipnz
  1026  0124  0AF4               	incf	___awmod@divisor+1,f
  1027  0125                     l1110:
  1028  0125  0873               	movf	___awmod@divisor,w
  1029  0126  0474               	iorwf	___awmod@divisor+1,w
  1030  0127  1903               	btfsc	3,2
  1031  0128  292A               	goto	u651
  1032  0129  292B               	goto	u650
  1033  012A                     u651:
  1034  012A  295A               	goto	l1128
  1035  012B                     u650:
  1036  012B                     l1112:
  1037  012B  01A1               	clrf	___awmod@counter
  1038  012C  0AA1               	incf	___awmod@counter,f
  1039  012D  2939               	goto	l1118
  1040  012E                     l1114:
  1041  012E  3001               	movlw	1
  1042  012F                     u665:
  1043  012F  1003               	clrc
  1044  0130  0DF3               	rlf	___awmod@divisor,f
  1045  0131  0DF4               	rlf	___awmod@divisor+1,f
  1046  0132  3EFF               	addlw	-1
  1047  0133  1D03               	skipz
  1048  0134  292F               	goto	u665
  1049  0135                     l1116:
  1050  0135  3001               	movlw	1
  1051  0136  00A0               	movwf	??___awmod
  1052  0137  0820               	movf	??___awmod,w
  1053  0138  07A1               	addwf	___awmod@counter,f
  1054  0139                     l1118:
  1055  0139  1FF4               	btfss	___awmod@divisor+1,7
  1056  013A  293C               	goto	u671
  1057  013B  293D               	goto	u670
  1058  013C                     u671:
  1059  013C  292E               	goto	l1114
  1060  013D                     u670:
  1061  013D                     l1120:
  1062  013D  0874               	movf	___awmod@divisor+1,w
  1063  013E  0276               	subwf	___awmod@dividend+1,w
  1064  013F  1D03               	skipz
  1065  0140  2943               	goto	u685
  1066  0141  0873               	movf	___awmod@divisor,w
  1067  0142  0275               	subwf	___awmod@dividend,w
  1068  0143                     u685:
  1069  0143  1C03               	skipc
  1070  0144  2946               	goto	u681
  1071  0145  2947               	goto	u680
  1072  0146                     u681:
  1073  0146  294D               	goto	l1124
  1074  0147                     u680:
  1075  0147                     l1122:
  1076  0147  0873               	movf	___awmod@divisor,w
  1077  0148  02F5               	subwf	___awmod@dividend,f
  1078  0149  0874               	movf	___awmod@divisor+1,w
  1079  014A  1C03               	skipc
  1080  014B  03F6               	decf	___awmod@dividend+1,f
  1081  014C  02F6               	subwf	___awmod@dividend+1,f
  1082  014D                     l1124:
  1083  014D  3001               	movlw	1
  1084  014E                     u695:
  1085  014E  1003               	clrc
  1086  014F  0CF4               	rrf	___awmod@divisor+1,f
  1087  0150  0CF3               	rrf	___awmod@divisor,f
  1088  0151  3EFF               	addlw	-1
  1089  0152  1D03               	skipz
  1090  0153  294E               	goto	u695
  1091  0154                     l1126:
  1092  0154  3001               	movlw	1
  1093  0155  02A1               	subwf	___awmod@counter,f
  1094  0156  1D03               	btfss	3,2
  1095  0157  2959               	goto	u701
  1096  0158  295A               	goto	u700
  1097  0159                     u701:
  1098  0159  293D               	goto	l1120
  1099  015A                     u700:
  1100  015A                     l1128:
  1101  015A  0822               	movf	___awmod@sign,w
  1102  015B  1903               	btfsc	3,2
  1103  015C  295E               	goto	u711
  1104  015D  295F               	goto	u710
  1105  015E                     u711:
  1106  015E  2964               	goto	l1132
  1107  015F                     u710:
  1108  015F                     l1130:
  1109  015F  09F5               	comf	___awmod@dividend,f
  1110  0160  09F6               	comf	___awmod@dividend+1,f
  1111  0161  0AF5               	incf	___awmod@dividend,f
  1112  0162  1903               	skipnz
  1113  0163  0AF6               	incf	___awmod@dividend+1,f
  1114  0164                     l1132:
  1115  0164  0876               	movf	___awmod@dividend+1,w
  1116  0165  00F4               	movwf	?___awmod+1
  1117  0166  0875               	movf	___awmod@dividend,w
  1118  0167  00F3               	movwf	?___awmod
  1119  0168                     l338:
  1120  0168  0008               	return
  1121  0169                     __end_of___awmod:
  1122                           
  1123                           	psect	text5
  1124  00A5                     __ptext5:	
  1125 ;; *************** function ___awdiv *****************
  1126 ;; Defined at:
  1127 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  divisor         2    3[COMMON] int 
  1130 ;;  dividend        2    5[COMMON] int 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  quotient        2    3[BANK0 ] int 
  1133 ;;  sign            1    2[BANK0 ] unsigned char 
  1134 ;;  counter         1    1[BANK0 ] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  2    3[COMMON] int 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         4       0       0       0       0
  1145 ;;      Locals:         0       4       0       0       0
  1146 ;;      Temps:          0       1       0       0       0
  1147 ;;      Totals:         4       5       0       0       0
  1148 ;;Total ram usage:        9 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_function
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158  00A5                     ___awdiv:	
  1159                           ;psect for function ___awdiv
  1160                           
  1161  00A5                     l1054:	
  1162                           ;incstack = 0
  1163                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1164                           
  1165  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1166  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1167  00A7  01A2               	clrf	___awdiv@sign
  1168  00A8                     l1056:
  1169  00A8  1FF4               	btfss	___awdiv@divisor+1,7
  1170  00A9  28AB               	goto	u531
  1171  00AA  28AC               	goto	u530
  1172  00AB                     u531:
  1173  00AB  28B3               	goto	l1062
  1174  00AC                     u530:
  1175  00AC                     l1058:
  1176  00AC  09F3               	comf	___awdiv@divisor,f
  1177  00AD  09F4               	comf	___awdiv@divisor+1,f
  1178  00AE  0AF3               	incf	___awdiv@divisor,f
  1179  00AF  1903               	skipnz
  1180  00B0  0AF4               	incf	___awdiv@divisor+1,f
  1181  00B1                     l1060:
  1182  00B1  01A2               	clrf	___awdiv@sign
  1183  00B2  0AA2               	incf	___awdiv@sign,f
  1184  00B3                     l1062:
  1185  00B3  1FF6               	btfss	___awdiv@dividend+1,7
  1186  00B4  28B6               	goto	u541
  1187  00B5  28B7               	goto	u540
  1188  00B6                     u541:
  1189  00B6  28C0               	goto	l1068
  1190  00B7                     u540:
  1191  00B7                     l1064:
  1192  00B7  09F5               	comf	___awdiv@dividend,f
  1193  00B8  09F6               	comf	___awdiv@dividend+1,f
  1194  00B9  0AF5               	incf	___awdiv@dividend,f
  1195  00BA  1903               	skipnz
  1196  00BB  0AF6               	incf	___awdiv@dividend+1,f
  1197  00BC                     l1066:
  1198  00BC  3001               	movlw	1
  1199  00BD  00A0               	movwf	??___awdiv
  1200  00BE  0820               	movf	??___awdiv,w
  1201  00BF  06A2               	xorwf	___awdiv@sign,f
  1202  00C0                     l1068:
  1203  00C0  01A3               	clrf	___awdiv@quotient
  1204  00C1  01A4               	clrf	___awdiv@quotient+1
  1205  00C2                     l1070:
  1206  00C2  0873               	movf	___awdiv@divisor,w
  1207  00C3  0474               	iorwf	___awdiv@divisor+1,w
  1208  00C4  1903               	btfsc	3,2
  1209  00C5  28C7               	goto	u551
  1210  00C6  28C8               	goto	u550
  1211  00C7                     u551:
  1212  00C7  28FF               	goto	l1090
  1213  00C8                     u550:
  1214  00C8                     l1072:
  1215  00C8  01A1               	clrf	___awdiv@counter
  1216  00C9  0AA1               	incf	___awdiv@counter,f
  1217  00CA  28D6               	goto	l1078
  1218  00CB                     l1074:
  1219  00CB  3001               	movlw	1
  1220  00CC                     u565:
  1221  00CC  1003               	clrc
  1222  00CD  0DF3               	rlf	___awdiv@divisor,f
  1223  00CE  0DF4               	rlf	___awdiv@divisor+1,f
  1224  00CF  3EFF               	addlw	-1
  1225  00D0  1D03               	skipz
  1226  00D1  28CC               	goto	u565
  1227  00D2                     l1076:
  1228  00D2  3001               	movlw	1
  1229  00D3  00A0               	movwf	??___awdiv
  1230  00D4  0820               	movf	??___awdiv,w
  1231  00D5  07A1               	addwf	___awdiv@counter,f
  1232  00D6                     l1078:
  1233  00D6  1FF4               	btfss	___awdiv@divisor+1,7
  1234  00D7  28D9               	goto	u571
  1235  00D8  28DA               	goto	u570
  1236  00D9                     u571:
  1237  00D9  28CB               	goto	l1074
  1238  00DA                     u570:
  1239  00DA                     l1080:
  1240  00DA  3001               	movlw	1
  1241  00DB                     u585:
  1242  00DB  1003               	clrc
  1243  00DC  0DA3               	rlf	___awdiv@quotient,f
  1244  00DD  0DA4               	rlf	___awdiv@quotient+1,f
  1245  00DE  3EFF               	addlw	-1
  1246  00DF  1D03               	skipz
  1247  00E0  28DB               	goto	u585
  1248  00E1  0874               	movf	___awdiv@divisor+1,w
  1249  00E2  0276               	subwf	___awdiv@dividend+1,w
  1250  00E3  1D03               	skipz
  1251  00E4  28E7               	goto	u595
  1252  00E5  0873               	movf	___awdiv@divisor,w
  1253  00E6  0275               	subwf	___awdiv@dividend,w
  1254  00E7                     u595:
  1255  00E7  1C03               	skipc
  1256  00E8  28EA               	goto	u591
  1257  00E9  28EB               	goto	u590
  1258  00EA                     u591:
  1259  00EA  28F2               	goto	l1086
  1260  00EB                     u590:
  1261  00EB                     l1082:
  1262  00EB  0873               	movf	___awdiv@divisor,w
  1263  00EC  02F5               	subwf	___awdiv@dividend,f
  1264  00ED  0874               	movf	___awdiv@divisor+1,w
  1265  00EE  1C03               	skipc
  1266  00EF  03F6               	decf	___awdiv@dividend+1,f
  1267  00F0  02F6               	subwf	___awdiv@dividend+1,f
  1268  00F1                     l1084:
  1269  00F1  1423               	bsf	___awdiv@quotient,0
  1270  00F2                     l1086:
  1271  00F2  3001               	movlw	1
  1272  00F3                     u605:
  1273  00F3  1003               	clrc
  1274  00F4  0CF4               	rrf	___awdiv@divisor+1,f
  1275  00F5  0CF3               	rrf	___awdiv@divisor,f
  1276  00F6  3EFF               	addlw	-1
  1277  00F7  1D03               	skipz
  1278  00F8  28F3               	goto	u605
  1279  00F9                     l1088:
  1280  00F9  3001               	movlw	1
  1281  00FA  02A1               	subwf	___awdiv@counter,f
  1282  00FB  1D03               	btfss	3,2
  1283  00FC  28FE               	goto	u611
  1284  00FD  28FF               	goto	u610
  1285  00FE                     u611:
  1286  00FE  28DA               	goto	l1080
  1287  00FF                     u610:
  1288  00FF                     l1090:
  1289  00FF  0822               	movf	___awdiv@sign,w
  1290  0100  1903               	btfsc	3,2
  1291  0101  2903               	goto	u621
  1292  0102  2904               	goto	u620
  1293  0103                     u621:
  1294  0103  2909               	goto	l1094
  1295  0104                     u620:
  1296  0104                     l1092:
  1297  0104  09A3               	comf	___awdiv@quotient,f
  1298  0105  09A4               	comf	___awdiv@quotient+1,f
  1299  0106  0AA3               	incf	___awdiv@quotient,f
  1300  0107  1903               	skipnz
  1301  0108  0AA4               	incf	___awdiv@quotient+1,f
  1302  0109                     l1094:
  1303  0109  0824               	movf	___awdiv@quotient+1,w
  1304  010A  00F4               	movwf	?___awdiv+1
  1305  010B  0823               	movf	___awdiv@quotient,w
  1306  010C  00F3               	movwf	?___awdiv
  1307  010D                     l325:
  1308  010D  0008               	return
  1309  010E                     __end_of___awdiv:
  1310                           
  1311                           	psect	text6
  1312  0169                     __ptext6:	
  1313 ;; *************** function _isr *****************
  1314 ;; Defined at:
  1315 ;;		line 63 in file "PostLab7.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;		None
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1329 ;;      Params:         0       0       0       0       0
  1330 ;;      Locals:         0       0       0       0       0
  1331 ;;      Temps:          3       0       0       0       0
  1332 ;;      Totals:         3       0       0       0       0
  1333 ;;Total ram usage:        3 bytes
  1334 ;; Hardware stack levels used: 1
  1335 ;; This function calls:
  1336 ;;		Nothing
  1337 ;; This function is called by:
  1338 ;;		Interrupt level 1
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342  0169                     _isr:	
  1343                           ;psect for function _isr
  1344                           
  1345  0169                     i1l1008:
  1346                           
  1347                           ;PostLab7.c: 64:     if(INTCONbits.RBIF){
  1348  0169  1C0B               	btfss	11,0	;volatile
  1349  016A  296C               	goto	u46_21
  1350  016B  296D               	goto	u46_20
  1351  016C                     u46_21:
  1352  016C  297F               	goto	i1l1018
  1353  016D                     u46_20:
  1354  016D                     i1l1010:
  1355                           
  1356                           ;PostLab7.c: 65:         if(!PORTBbits.RB0){
  1357  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1358  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1359  016F  1806               	btfsc	6,0	;volatile
  1360  0170  2972               	goto	u47_21
  1361  0171  2973               	goto	u47_20
  1362  0172                     u47_21:
  1363  0172  2978               	goto	i1l63
  1364  0173                     u47_20:
  1365  0173                     i1l1012:
  1366                           
  1367                           ;PostLab7.c: 66:             PORTA++;
  1368  0173  3001               	movlw	1
  1369  0174  00F0               	movwf	??_isr
  1370  0175  0870               	movf	??_isr,w
  1371  0176  0785               	addwf	5,f	;volatile
  1372                           
  1373                           ;PostLab7.c: 67:         }
  1374  0177  297E               	goto	i1l1016
  1375  0178                     i1l63:	
  1376                           ;PostLab7.c: 68:         else if(!PORTBbits.RB1){
  1377                           
  1378  0178  1886               	btfsc	6,1	;volatile
  1379  0179  297B               	goto	u48_21
  1380  017A  297C               	goto	u48_20
  1381  017B                     u48_21:
  1382  017B  297E               	goto	i1l1016
  1383  017C                     u48_20:
  1384  017C                     i1l1014:
  1385                           
  1386                           ;PostLab7.c: 69:             PORTA--;
  1387  017C  3001               	movlw	1
  1388  017D  0285               	subwf	5,f	;volatile
  1389  017E                     i1l1016:
  1390                           
  1391                           ;PostLab7.c: 71:         INTCONbits.RBIF = 0;
  1392  017E  100B               	bcf	11,0	;volatile
  1393  017F                     i1l1018:
  1394                           
  1395                           ;PostLab7.c: 73:     if(INTCONbits.T0IF){
  1396  017F  1D0B               	btfss	11,2	;volatile
  1397  0180  2982               	goto	u49_21
  1398  0181  2983               	goto	u49_20
  1399  0182                     u49_21:
  1400  0182  29AE               	goto	i1l72
  1401  0183                     u49_20:
  1402  0183                     i1l1020:
  1403                           
  1404                           ;PostLab7.c: 74:         PORTD = 0;
  1405  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0185  0188               	clrf	8	;volatile
  1408  0186                     i1l1022:
  1409                           
  1410                           ;PostLab7.c: 75:         if(bandera == 0){
  1411  0186  0878               	movf	_bandera,w
  1412  0187  1D03               	btfss	3,2
  1413  0188  298A               	goto	u50_21
  1414  0189  298B               	goto	u50_20
  1415  018A                     u50_21:
  1416  018A  2992               	goto	i1l1028
  1417  018B                     u50_20:
  1418  018B                     i1l1024:
  1419                           
  1420                           ;PostLab7.c: 76:             PORTC = display1;
  1421  018B  0852               	movf	_display1,w
  1422  018C  0087               	movwf	7	;volatile
  1423                           
  1424                           ;PostLab7.c: 77:             PORTD = 0b00000001;
  1425  018D  3001               	movlw	1
  1426  018E  0088               	movwf	8	;volatile
  1427  018F                     i1l1026:
  1428                           
  1429                           ;PostLab7.c: 78:             bandera = 1;
  1430  018F  01F8               	clrf	_bandera
  1431  0190  0AF8               	incf	_bandera,f
  1432                           
  1433                           ;PostLab7.c: 79:         }
  1434  0191  29AB               	goto	i1l1038
  1435  0192                     i1l1028:
  1436  0192  0378               	decf	_bandera,w
  1437  0193  1D03               	btfss	3,2
  1438  0194  2996               	goto	u51_21
  1439  0195  2997               	goto	u51_20
  1440  0196                     u51_21:
  1441  0196  29A0               	goto	i1l1032
  1442  0197                     u51_20:
  1443  0197                     i1l1030:
  1444                           
  1445                           ;PostLab7.c: 81:             PORTC = display2;
  1446  0197  0851               	movf	_display2,w
  1447  0198  0087               	movwf	7	;volatile
  1448                           
  1449                           ;PostLab7.c: 82:             PORTD = 0b00000010;
  1450  0199  3002               	movlw	2
  1451  019A  0088               	movwf	8	;volatile
  1452                           
  1453                           ;PostLab7.c: 83:             bandera = 2;
  1454  019B  3002               	movlw	2
  1455  019C  00F0               	movwf	??_isr
  1456  019D  0870               	movf	??_isr,w
  1457  019E  00F8               	movwf	_bandera
  1458                           
  1459                           ;PostLab7.c: 84:         }
  1460  019F  29AB               	goto	i1l1038
  1461  01A0                     i1l1032:
  1462  01A0  3002               	movlw	2
  1463  01A1  0678               	xorwf	_bandera,w
  1464  01A2  1D03               	btfss	3,2
  1465  01A3  29A5               	goto	u52_21
  1466  01A4  29A6               	goto	u52_20
  1467  01A5                     u52_21:
  1468  01A5  29AB               	goto	i1l1038
  1469  01A6                     u52_20:
  1470  01A6                     i1l1034:
  1471                           
  1472                           ;PostLab7.c: 86:             PORTC = display3;
  1473  01A6  0850               	movf	_display3,w
  1474  01A7  0087               	movwf	7	;volatile
  1475                           
  1476                           ;PostLab7.c: 87:             PORTD = 0b00000100;
  1477  01A8  3004               	movlw	4
  1478  01A9  0088               	movwf	8	;volatile
  1479  01AA                     i1l1036:
  1480                           
  1481                           ;PostLab7.c: 88:             bandera = 0;
  1482  01AA  01F8               	clrf	_bandera
  1483  01AB                     i1l1038:
  1484                           
  1485                           ;PostLab7.c: 90:         INTCONbits.T0IF = 0;
  1486  01AB  110B               	bcf	11,2	;volatile
  1487  01AC                     i1l1040:
  1488                           
  1489                           ;PostLab7.c: 91:         TMR0 = 217;
  1490  01AC  30D9               	movlw	217
  1491  01AD  0081               	movwf	1	;volatile
  1492  01AE                     i1l72:
  1493  01AE  0872               	movf	??_isr+2,w
  1494  01AF  008A               	movwf	10
  1495  01B0  0E71               	swapf	??_isr+1,w
  1496  01B1  0083               	movwf	3
  1497  01B2  0EFE               	swapf	btemp,f
  1498  01B3  0E7E               	swapf	btemp,w
  1499  01B4  0009               	retfie
  1500  01B5                     __end_of_isr:
  1501  007E                     btemp	set	126	;btemp
  1502  007E                     wtemp0	set	126
  1503                           
  1504                           	psect	intentry
  1505  0004                     __pintentry:	
  1506                           ;incstack = 0
  1507                           ; Regs used in _isr: [wreg+status,2+status,0]
  1508                           
  1509  0004                     interrupt_function:
  1510  007E                     saved_w	set	btemp
  1511  0004  00FE               	movwf	btemp
  1512  0005  0E03               	swapf	3,w
  1513  0006  00F1               	movwf	??_isr+1
  1514  0007  080A               	movf	10,w
  1515  0008  00F2               	movwf	??_isr+2
  1516  0009  120A  118A  2969   	ljmp	_isr
  1517                           
  1518                           	psect	idloc
  1519                           
  1520                           ;Config register IDLOC0 @ 0x2000
  1521                           ;	unspecified, using default values
  1522  2000                     	org	8192
  1523  2000  3FFF               	dw	16383
  1524                           
  1525                           ;Config register IDLOC1 @ 0x2001
  1526                           ;	unspecified, using default values
  1527  2001                     	org	8193
  1528  2001  3FFF               	dw	16383
  1529                           
  1530                           ;Config register IDLOC2 @ 0x2002
  1531                           ;	unspecified, using default values
  1532  2002                     	org	8194
  1533  2002  3FFF               	dw	16383
  1534                           
  1535                           ;Config register IDLOC3 @ 0x2003
  1536                           ;	unspecified, using default values
  1537  2003                     	org	8195
  1538  2003  3FFF               	dw	16383
  1539                           
  1540                           	psect	config
  1541                           
  1542                           ;Config register CONFIG1 @ 0x2007
  1543                           ;	Oscillator Selection bits
  1544                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1545                           ;	Watchdog Timer Enable bit
  1546                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1547                           ;	Power-up Timer Enable bit
  1548                           ;	PWRTE = OFF, PWRT disabled
  1549                           ;	RE3/MCLR pin function select bit
  1550                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1551                           ;	Code Protection bit
  1552                           ;	CP = OFF, Program memory code protection is disabled
  1553                           ;	Data Code Protection bit
  1554                           ;	CPD = OFF, Data memory code protection is disabled
  1555                           ;	Brown Out Reset Selection bits
  1556                           ;	BOREN = OFF, BOR disabled
  1557                           ;	Internal External Switchover bit
  1558                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1559                           ;	Fail-Safe Clock Monitor Enabled bit
  1560                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1561                           ;	Low Voltage Programming Enable bit
  1562                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1563                           ;	In-Circuit Debugger Mode bit
  1564                           ;	DEBUG = 0x1, unprogrammed default
  1565  2007                     	org	8199
  1566  2007  20D4               	dw	8404
  1567                           
  1568                           ;Config register CONFIG2 @ 0x2008
  1569                           ;	Brown-out Reset Selection bit
  1570                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1571                           ;	Flash Program Memory Self Write Enable bits
  1572                           ;	WRT = OFF, Write protection off
  1573  2008                     	org	8200
  1574  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         9
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     33      51
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _function->___awdiv
    _function->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_function
    _function->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2303
                                             25 BANK0      8     8      0
                           _function
                              _setup
                         _tmr0_setup
 ---------------------------------------------------------------------------------
 (1) _tmr0_setup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _function                                            20    14      6    2201
                                              5 BANK0     20    14      6
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              3 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              3 COMMON     4     0      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _function
     ___awdiv
     ___awmod
   _setup
   _tmr0_setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      33       5       63.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E      12        0.0%
ABS                  0      0      3E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Apr 08 11:44:15 2022

                      pc 0002                       l57 023D                       l75 021D  
                     l78 00A4             ___awdiv@sign 0022                       fsr 0004  
                    l325 010D                      l338 0168                      l950 0239  
                    l960 020E                      l970 0213                      l962 020F  
                    l954 01FC                      l980 0218                      l972 0214  
                    l964 0210                      l956 020A                      l948 0231  
                    l982 021C                      l974 0215                      l966 0211  
                    l958 020D                      l976 0216                      l968 0212  
                    l978 0217                      u610 00FF                      u530 00AC  
                    u611 00FE                      u531 00AB                      u620 0104  
                    u540 00B7                      u700 015A                      u621 0103  
                    u605 00F3                      u541 00B6                      u701 0159  
                    u550 00C8                      u710 015F                      u630 0115  
                    u551 00C7                      u711 015E                      u631 0114  
                    u640 0120                      u641 011F                      u570 00DA  
                    u650 012B                      u571 00D9                      u651 012A  
                    u565 00CC                      u590 00EB                      u670 013D  
                    u591 00EA                      u671 013C                      u680 0147  
                    u585 00DB                      u681 0146                      u665 012F  
                    u595 00E7                      u685 0143                      u695 014E  
                    _isr 0169                      fsr0 0004                      indf 0000  
           ___awmod@sign 0022                     l1100 0111                     l1110 0125  
                   l1102 0115                     l1120 013D                     l1112 012B  
                   l1104 011A                     l1130 015F                     l1122 0147  
                   l1114 012E                     l1106 011C                     l1060 00B1  
                   l1132 0164                     l1124 014D                     l1116 0135  
                   l1108 0120                     l1140 0043                     l1070 00C2  
                   l1062 00B3                     l1054 00A5                     l1126 0154  
                   l1118 0139                     l1150 0088                     l1142 0056  
                   l1080 00DA                     l1072 00C8                     l1064 00B7  
                   l1056 00A8                     l1128 015A                     l1152 008C  
                   l1144 0069                     l1136 002A                     l1160 01BF  
                   l1082 00EB                     l1074 00CB                     l1090 00FF  
                   l1066 00BC                     l1058 00AC                     l1154 0090  
                   l1146 0080                     l1138 003F                     l1162 01E3  
                   l1092 0104                     l1084 00F1                     l1076 00D2  
                   l1068 00C0                     l1148 0084                     l1164 01EA  
                   l1094 0109                     l1086 00F2                     l1078 00D6  
                   l1166 01F1                     l1158 01B5                     l1088 00F9  
                   l1098 010E                     ?_isr 0070                     i1l63 0178  
                   i1l72 01AE                     _TMR0 0001                     _main 01B5  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 010E          __end_of___awmod 0169  
                  _ANSEL 0188          ___awdiv@divisor 0073          ___awdiv@counter 0021  
                  u50_20 018B                    u50_21 018A                    u51_20 0197  
                  u51_21 0196                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    u52_20 01A6                    u52_21 01A5  
                  u46_20 016D                    u46_21 016C                    u47_20 0173  
                  u47_21 0172                    u48_20 017C                    u48_21 017B  
                  u49_20 0183                    u49_21 0182                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _cont1 007A  
                  _cont2 0079                    _tabla 0041                    _setup 01FC  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 01FC                   ??_main 0039  
       ___awdiv@dividend 0075                   ?_setup 0070                   _ANSELH 0189  
                 i1l1010 016D                   i1l1020 0183                   i1l1012 0173  
                 i1l1030 0197                   i1l1022 0186                   i1l1014 017C  
                 i1l1040 01AC                   i1l1032 01A0                   i1l1024 018B  
                 i1l1016 017E                   i1l1008 0169                   i1l1034 01A6  
                 i1l1026 018F                   i1l1018 017F                   i1l1036 01AA  
                 i1l1028 0192                   i1l1038 01AB       function@splitarray 002B  
              ??___awdiv 0020                ??___awmod 0020         ___awdiv@quotient 0023  
       __end_of_function 00A5          ___awmod@divisor 0073          ___awmod@counter 0021  
                 saved_w 007E  __end_of__initialization 0026              function@num 0025  
         __pcstackCOMMON 0070             __pidataBANK0 023E            __end_of_setup 021E  
         _OPTION_REGbits 0081                  ??_setup 0073               __pbssBANK0 004B  
             __pmaintext 01B5               __pintentry 0004                ?_function 0025  
                ___awdiv 00A5                  ___awmod 010E                  _bandera 0078  
                _digito1 0077                  _digito2 004F                  _digito3 004E  
                __ptext1 0231                  __ptext2 01FC                  __ptext3 002A  
                __ptext4 010E                  __ptext5 00A5                  __ptext6 0169  
       ___awmod@dividend 0075     end_of_initialization 0026               _tmr0_setup 0231  
             ??_function 0077                _PORTBbits 0006                _TRISBbits 0086  
             _splitarray 004B               main@result 003B      start_initialization 000F  
            __end_of_isr 01B5              ?_tmr0_setup 0070               init_fetch0 021E  
            __pdataBANK0 0041               function@D1 0033              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020                __pnvBANK0 0050  
               ?___awdiv 0073                 ?___awmod 0073        interrupt_function 0004  
               _IOCBbits 0096                 _WPUBbits 0095                 _display1 0052  
               _display2 0051                 _display3 0050             ??_tmr0_setup 0073  
               _function 002A       __end_of_tmr0_setup 023E               _INTCONbits 000B  
               init_ram0 0222                 intlevel1 0000               _OSCCONbits 008F  
          function@digit 0031  
